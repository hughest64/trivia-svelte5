# predefined variables: https://docs.gitlab.com/16.2/ee/ci/variables/predefined_variables.html
# keyword reference: https://docs.gitlab.com/16.2/ee/ci/yaml/index.html

stages:
  - deploy
  - release

.build:
  script:
    # update and build SvelteKit
    - $NPM i && $NPM run build
    # update and build Django
    - pipenv install
    - cd server
    - $PYTHON manage.py collectstatic --no-input
    - $PYTHON manage.py migrate
    # restart services
    - sudo systemctl restart tm-trivia.service
    - sudo systemctl restart tm-trivia-api.service

staging-deploy-job:
  tags:
    - tm_staging
  stage: deploy
  variables:
    PYTHON: "/home/gitlab-runner/.local/share/virtualenvs/tm-trivia-OAypQb65/bin/python"
    NPM: "/home/gitlab-runner/.nvm/versions/node/v18.18.0/bin/npm"
  before_script:
    - cd /opt/tm-trivia
    # pull the updated repo
    - git reset --hard && git fetch origin main && git pull origin main
  extends: .build
  environment: staging
  rules:
     # only run when merging into main
     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

production-release-job:
  tags:
    - tm_production
  stage: release
  variables:
    PYTHON: "/home/gitlab-runner/.local/share/virtualenvs/tm-trivia-d-ZBd7FX/bin/python"
    NPM: "/home/gitlab-runner/.nvm/versions/node/v18.18.0/bin/npm"
  before_script:
    - cd /opt/cotn/tm-trivia
    # reset, fetch tags, and checkout the latest tag as a new branch
    - git reset --hard && git fetch --tags && git checkout -b $CI_COMMIT_TAG $CI_COMMIT_TAG
  extends: .build
  # TODO: script section that will invoke python to create a changelog entry in the db
  environment: production
  rules:
     - if: $CI_COMMIT_TAG
       # when: manual
  release:
    tag_name: $CI_COMMIT_TAG
    name: 'Trivia Mafia Release $CI_COMMIT_TAG'
    description: $CI_COMMIT_TAG_MESSAGE